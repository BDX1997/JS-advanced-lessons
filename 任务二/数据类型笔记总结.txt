1.数据类型
  6种：
  基本（原始）类型：Number、String、Boolean、Null、Undefined
  引用（对象）类型：Object（Array、Function、Date、Error等）

  定义为基本类型的函数局部变量分配在栈区。
  定义为引用类型的变量，其引用分配在栈区或堆区，引用的对象分配在堆区。

  数据类型检测方法（typeof、instanceof）

2.基本类型与引用类型的区别
 （1）内存分配方式不同
       ・函数内定义的基本数据类型的临时变量分配在栈区
       ・引用数据类型的变量的引用（地址）存储在栈区或堆区，被引用（指向）
         的对象存储在堆区
        *注：栈区常用来存储函数局部临时变量，一般数据量较小，堆区常用来
             存储更为复杂的数据结构的对象
 （2）赋值时不同
	-赋值、赋引用（地址）、深拷贝与浅拷贝
 （3）判等时的不同
	-值类型是判断变量的值是否相等（值比较）
	-引用类型是判断所指向的内存空间是否相同（引用比较）
 （4）函数参数传递时的不同
	-按值传递
	-按引用传递
  注：真正决定这几种不同的是数据类型，而不是内存分配方式，内存分配方式
      决定的是变量的生命周期。

2.基本数据类型的值

・Number类型的值
 -整数与浮点数
 -NaN、Infinity、-Infinity、+0、-0

・String类型的值
 -空字符、字符和字符串、转义字符

・Boolean类型的值
 -true、false

・Null与Undefined
 -null、undefined

・简单对象
 -例：var obj ={name：“Jack”，age：20}；

・数组
 -例：var arr = [1,2,true,"Hi"];

・函数对象
 -例: var foo = function(x,y){...};//函数也是对象（可执行的对象），也有
      属性和方法

・正则对象
 -例:var reg = /^a+b+$/;

3.数据类型的转换

・其他类型转换为Boolean类型
・转换方式
 -Boolean（）、value?true:false、!!value

・其他类型转换为Number类型
・转换方式
 -Number（）、+value、parseFloat、parseInt

・其他类型转换为String类型
・转换方式
 -String（）、"+value、value.toString();